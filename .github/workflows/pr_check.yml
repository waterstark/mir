name: Check PR
on:
  pull_request:
    branches: [main]
    types: [opened, synchronize]
    paths:
      - "**.py"
      - "**.toml"
      - "**.lock"

jobs: 
  tests:
    strategy:
      matrix:
        POSTGRES_USER: [postgres] 
        POSTGRES_PASSWORD: [postgres]
        POSTGRES_DB: [postgres]
        python-version: ["3.10"]
        poetry-version: ["1.5.1"]
        os: [ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{matrix.POSTGRES_USER}} 
          POSTGRES_PASSWORD: ${{matrix.POSTGRES_PASSWORD}}
          POSTGRES_DB: ${{matrix.POSTGRES_DB}}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout a Git repo
        uses: actions/checkout@v3
      - name: Cache deps
        uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry/
          key: python-deps-${{ hashFiles('**/poetry.lock') }}
      - name: Installing Python
        uses: actions/setup-python@v4
        with: 
          python-version: ${{ matrix.python-version }}
      - name: Installing Poetry
        uses: abatilo/actions-poetry@v2
        with: 
          poetry-version: ${{ matrix.poetry-version }}
      - name: Installing Deps
        run: poetry install
      - name: Tests
        run: poetry run pytest --cov=. --cov-report=term-missing:skip-covered --cov-branch --cov-report=xml tests
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: ${{matrix.POSTGRES_DB}}
          DB_USER: ${{matrix.POSTGRES_USER}}
          DB_PASS: ${{matrix.POSTGRES_DB}}
          MONGO_HOST: 192.168.0.18
          MONGO_PORT: '27017'
          MONGO_DATABASE: mongodb
          REDIS_HOST: redis
          REDIS_PORT: '6379'
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
  
  lint:
    needs: tests
    strategy:
      matrix:
        python-version: ["3.10"]
        poetry-version: ["1.5.1"]
        os: [ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout a Git repo
        uses: actions/checkout@v3
      - name: Cache deps
        uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry/
          key: python-deps-${{ hashFiles('**/poetry.lock') }}
      - name: Installing Python
        uses: actions/setup-python@v4
        with: 
          python-version: ${{ matrix.python-version }}
      - name: Installing Poetry
        uses: abatilo/actions-poetry@v2
        with: 
          poetry-version: ${{ matrix.poetry-version }}
      - name: Linter
        run: poetry run ruff check . --fix
